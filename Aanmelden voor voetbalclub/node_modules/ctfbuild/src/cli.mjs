#!/usr/bin/env node
import fs from 'fs';
import { input } from '@inquirer/prompts';
import colors from 'colors';
import { minify } from "minify";

const result = {
    name: "",
    description: "",
    points: 0,
    category: "",
    hint: "",
    code: {
        html: "",
        css: "",
        js: ""
    }
}

result.name = await input({message: "What is the name of the challenge?"});
result.description = await input({message: "What is the description of the challenge?"});
result.points = parseInt(await input({message: "How many points is the challenge worth?", validate: (value) => {
    if (isNaN(value)) {
        return "Please enter a number";
    }
    return true;
}}));
result.hint = await input({message: "What is the hint for the challenge?"});
result.category = await input({message: "What is the category of the challenge?"});

let minifyPromises = [];

fs.readdirSync(process.cwd()).forEach((file) => {
    switch (file.split(".")[1]) {
        case "html":
            minifyPromises.push(minify(file).then((data) => {
                result.code.html = data;
            }));
            break;
        case "css":
            minifyPromises.push(minify(file).then((data) => {
                result.code.css = data;
            }));
            break;
        case "js":
            minifyPromises.push(minify(file).then((data) => {
                result.code.js = data;
            }));
            break;
    }
})

await Promise.all(minifyPromises);

fs.writeFileSync(`${process.cwd()}/${result.name}.json`, JSON.stringify(result, null, 4));
console.log(colors.green(`Successfully created ${result.name}.json`))
